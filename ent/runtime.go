// Code generated by entc, DO NOT EDIT.

package ent

import (
	"app/ent/game"
	"app/ent/player"
	"app/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescCreatedAt is the schema descriptor for created_at field.
	gameDescCreatedAt := gameFields[2].Descriptor()
	// game.DefaultCreatedAt holds the default value on creation for the created_at field.
	game.DefaultCreatedAt = gameDescCreatedAt.Default.(func() time.Time)
	// gameDescID is the schema descriptor for id field.
	gameDescID := gameFields[0].Descriptor()
	// game.IDValidator is a validator for the "id" field. It is called by the builders before save.
	game.IDValidator = gameDescID.Validators[0].(func(int) error)
	playerFields := schema.Player{}.Fields()
	_ = playerFields
	// playerDescType is the schema descriptor for type field.
	playerDescType := playerFields[0].Descriptor()
	// player.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	player.TypeValidator = playerDescType.Validators[0].(func(int) error)
	// playerDescName is the schema descriptor for name field.
	playerDescName := playerFields[1].Descriptor()
	// player.NameValidator is a validator for the "name" field. It is called by the builders before save.
	player.NameValidator = playerDescName.Validators[0].(func(string) error)
}
